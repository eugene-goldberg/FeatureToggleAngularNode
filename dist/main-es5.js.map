{"version":3,"sources":["/./src/app/app.component.html","/./src/app/dialogs/add/add.dialog.html","/./src/app/dialogs/delete/delete.dialog.html","/./src/app/dialogs/edit/edit.dialog.html","/./src/$_lazy_route_resource lazy namespace object","/./src/app/app.component.css","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/dialogs/add/add.dialog.component.ts","/./src/app/dialogs/add/add.dialog.css","/./src/app/dialogs/delete/delete.dialog.component.ts","/./src/app/dialogs/delete/delete.dialog.css","/./src/app/dialogs/edit/edit.dialog.component.ts","/./src/app/dialogs/edit/edit.dialog.css","/./src/app/models/issue.ts","/./src/app/services/data.service.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <span>Feature Toggle</span>\\n  <span class=\\\"spacer\\\"></span>\\n  <!-- Reload data:\\n  <button mat-icon-button (click)=\\\"refresh()\\\">\\n    <mat-icon>refresh</mat-icon>\\n  </button> -->\\n</mat-toolbar>\\n\\n<form class=\\\"formwidth\\\" (ngSubmit)=\\\"onSubmit()\\\" #myForm=\\\"ngForm\\\">\\n  <table class=\\\"fullwidth\\\" cellspacing=\\\"10\\\" >\\n      <tr>\\n          <td>\\n              <mat-form-field class=\\\"fullwidth\\\">\\n                  <input matInput placeholder=\\\"Request ID\\\" id=\\\"requestId\\\" [(ngModel)]=\\\"model.requestId\\\" name=\\\"requestId\\\">\\n              </mat-form-field>\\n          </td>\\n          <td>\\n              <mat-form-field class=\\\"fullwidth\\\">\\n                  <input matInput placeholder=\\\"Application\\\" id=\\\"application\\\" [(ngModel)]=\\\"model.application\\\" name=\\\"application\\\">\\n              </mat-form-field>\\n          </td>\\n      \\n  \\n  <p>\\n      <mat-form-field class=\\\"fullwidth\\\">\\n          <input matInput placeholder=\\\"Component\\\" id=\\\"component\\\" [(ngModel)]=\\\"model.component\\\" name=\\\"component\\\">\\n      </mat-form-field>\\n  </p>\\n      \\n          <td>\\n              <mat-form-field class=\\\"fullwidth\\\">\\n                  <input matInput placeholder=\\\"Feature\\\" id=\\\"feature\\\" [(ngModel)]=\\\"model.feature\\\" name=\\\"feature\\\">\\n              </mat-form-field>\\n          </td>\\n          \\n          <td>\\n            <mat-checkbox [checked]=model.on (change)=\\\"model.on = !model.on\\\">\\n            </mat-checkbox>\\n          </td>\\n\\n          <p>\\n            <button mat-button type=\\\"submit\\\" md-raised-button>Search</button>\\n        </p>\\n      </tr>\\n  </table>\\n</form>\\n\\n<div class=\\\"container mat-elevation-z8\\\">\\n\\n  <!-- <div class=\\\"form\\\">\\n    <mat-form-field floatPlaceholder=\\\"never\\\" color=\\\"accent\\\">\\n      <input matInput #filter placeholder=\\\"Filter issues\\\">\\n    </mat-form-field>\\n  </div> -->\\n\\n  <mat-table #table [dataSource]=\\\"myDs\\\" matSort class=\\\"mat-cell\\\">\\n    ng update @angular/cli @angular/core\\n    <!--- Note that these columns can be defined in any order.\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n    <!-- ID Column -->\\n    <ng-container matColumnDef=\\\"requestId\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Request ID</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\" >{{row.id}}</mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"application\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Application</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\"> {{row.application}}</mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"component\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Component</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\"> {{row.component}}</mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"on\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> On /Off </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">\\n        <mat-checkbox [checked]=row.on>\\n        </mat-checkbox>\\n      </td>\\n    </ng-container>\\n\\n    \\n\\n    <ng-container matColumnDef=\\\"feature\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Feature</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\"> {{row.feature}}</mat-cell>\\n    </ng-container>\\n\\n\\n    <!-- actions -->\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew()\\\">\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\n        </button>\\n      </mat-header-cell>\\n\\n      <mat-cell *matCellDef=\\\"let row; let i=index;\\\">\\n        <button mat-icon-button color=\\\"accent\\\" (click)=\\\"startEdit(i, row.id, row.application, row.component, row.feature, row.on)\\\">\\n          <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\n        </button>\\n\\n        <button mat-icon-button color=\\\"accent\\\" (click)=\\\"deleteItem(i, row.id, row.application, row.component, row.feature, row.on)\\\">\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\n        </button>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n  </mat-table>\\n</div>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <h3 mat-dialog-title>Add New Feature Toggle</h3>\\n\\n  <form class=\\\"mat-dialog-content\\\" (ngSubmit)=\\\"submit\\\" #formControl=\\\"ngForm\\\">\\n\\n    <div class=\\\"form\\\">\\n      <mat-form-field color=\\\"accent\\\">\\n        <input matInput #input class=\\\"form-control\\\" placeholder=\\\"Request Id\\\" [(ngModel)]=\\\"data.id\\\" name=\\\"requestId\\\" >\\n        <!-- <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error> -->\\n      </mat-form-field>\\n    </div>\\n\\n    <!--Textarea for demo purposes-->\\n    <div class=\\\"form\\\">\\n      <mat-form-field color=\\\"accent\\\">\\n        <textarea matInput #input class=\\\"form-control\\\" placeholder=\\\"Application\\\" [(ngModel)]=\\\"data.application\\\" name=\\\"application\\\" required ></textarea>\\n        <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\n      </mat-form-field>\\n    </div>\\n\\n    <!--Contains mat-hint for characters count and has maxLengt set-->\\n    <div class=\\\"form\\\">\\n      <mat-form-field color=\\\"accent\\\">\\n        <input matInput #inputstate class=\\\"form-control\\\" placeholder=\\\"Component\\\" [(ngModel)]=\\\"data.component\\\" name=\\\"component\\\" maxlength=\\\"20\\\" required >\\n        <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\n        <mat-hint align=\\\"end\\\">{{inputstate.value?.length || 0}}/10</mat-hint>\\n      </mat-form-field>\\n    </div>\\n\\n    <div class=\\\"form\\\">\\n      <mat-form-field color=\\\"accent\\\">\\n        <input matInput #inputstate class=\\\"form-control\\\" placeholder=\\\"Feature\\\" [(ngModel)]=\\\"data.feature\\\" name=\\\"feature\\\" maxlength=\\\"20\\\" required >\\n        <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\n        <mat-hint align=\\\"end\\\">{{inputstate.value?.length || 0}}/10</mat-hint>\\n      </mat-form-field>\\n    </div>\\n\\n    <div>\\n      <mat-checkbox [(ngModel)]=\\\"data.on\\\" name=\\\"on\\\">\\n          On / Off\\n      </mat-checkbox >\\n    </div>\\n\\n    <!-- <div class=\\\"form\\\">\\n      <mat-form-field color=\\\"accent\\\">\\n        <input matInput placeholder=\\\"Url\\\" [(ngModel)]=\\\"data.url\\\" name=\\\"url\\\">\\n      </mat-form-field>\\n    </div>\\n\\n    <div class=\\\"form\\\">\\n      <mat-form-field color=\\\"accent\\\">\\n        <input matInput placeholder=\\\"Created at\\\" [(ngModel)]=\\\"data.created_at\\\" name=\\\"created_at\\\">\\n      </mat-form-field>\\n    </div>\\n\\n    <div class=\\\"form\\\">\\n      <mat-form-field color=\\\"accent\\\">\\n        <input matInput placeholder=\\\"Updated at\\\" [(ngModel)]=\\\"data.updated_at\\\" name=\\\"updated_at\\\">\\n      </mat-form-field>\\n    </div> -->\\n\\n    <div mat-dialog-actions>\\n      <button mat-button [type]=\\\"submit\\\" [disabled]=\\\"!formControl.valid\\\" [mat-dialog-close]=\\\"1\\\" (click)=\\\"confirmAdd()\\\">Save</button>\\n      <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\n    </div>\\n  </form>\\n</div>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <h3 mat-dialog-title>Are you sure?</h3>\\n  <div mat-dialog-content>\\n    Id: {{data.id}}\\n    <p></p>\\n    Name: {{data.name}}\\n    <p></p>\\n    State: {{data.state}}\\n    <p></p>\\n    Url: {{data.url}}\\n    <p></p>\\n  </div>\\n\\n  <div mat-dialog-actions>\\n    <button mat-button [mat-dialog-close]=\\\"1\\\" (click)=\\\"confirmDelete()\\\">Delete</button>\\n    <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <h3 mat-dialog-title>Issue id: {{data.id}}</h3>\\n\\n  <form class=\\\"mat-dialog-content\\\" (ngSubmit)=\\\"submit\\\" #formControl=\\\"ngForm\\\">\\n\\n    <div class=\\\"form\\\">\\n      <mat-form-field color=\\\"accent\\\">\\n        <input matInput #input class=\\\"form-control\\\" placeholder=\\\"Request ID\\\" [(ngModel)]=\\\"data.id\\\" name=\\\"requestId\\\" >\\n        <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\n      </mat-form-field>\\n    </div>\\n\\n    <!--Textarea for demo purposes-->\\n    <div class=\\\"form\\\">\\n      <mat-form-field color=\\\"accent\\\">\\n        <textarea matInput #input class=\\\"form-control\\\" placeholder=\\\"Application\\\" [(ngModel)]=\\\"data.application\\\" name=\\\"application\\\"  ></textarea>\\n        <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\n      </mat-form-field>\\n    </div>\\n\\n    <!--Contains mat-hint for characters count and has maxLengt set-->\\n    <div class=\\\"form\\\">\\n      <mat-form-field color=\\\"accent\\\">\\n        <input matInput #inputstate class=\\\"form-control\\\" placeholder=\\\"Component\\\" [(ngModel)]=\\\"data.component\\\" name=\\\"component\\\" maxlength=\\\"10\\\"  >\\n        <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\n        <mat-hint align=\\\"end\\\">{{inputstate.value?.length || 0}}/10</mat-hint>\\n      </mat-form-field>\\n    </div>\\n\\n    <div class=\\\"form\\\">\\n      <mat-form-field color=\\\"accent\\\">\\n        <input matInput #inputstate class=\\\"form-control\\\" placeholder=\\\"Feature\\\" [(ngModel)]=\\\"data.feature\\\" name=\\\"feature\\\" maxlength=\\\"10\\\"  >\\n        <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\n        <mat-hint align=\\\"end\\\">{{inputstate.value?.length || 0}}/10</mat-hint>\\n      </mat-form-field>\\n    </div>\\n\\n    <div>\\n      <mat-checkbox [(ngModel)]=\\\"data.on\\\" name=\\\"on\\\">\\n          \\n      </mat-checkbox >\\n    </div>\\n\\n    <div mat-dialog-actions>\\n      <button mat-button [type]=\\\"submit\\\"  [mat-dialog-close]=\\\"1\\\" (click)=\\\"stopEdit()\\\">Save</button>\\n      <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\n    </div>\\n  </form>\\n</div>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"/* Structure */\\n.container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n/* Toolbar */\\n.spacer {\\n  flex: 1 1 auto;\\n}\\n/* Filter */\\n.form {\\n  min-height: 56px;\\n  max-height: 56px;\\n  display: flex;\\n  align-items: center;\\n  padding: 8px 24px 0;\\n  font-size: 20px;\\n  justify-content: space-between;\\n  border-bottom: 1px solid transparent;\\n}\\n.mat-form-field {\\n  font-size: 14px;\\n  flex-grow: 1;\\n  margin-top: 8px;\\n}\\n/* Mat table */\\n.no-results {\\n  display: flex;\\n  justify-content: center;\\n  padding: 14px;\\n  font-size: 14px;\\n  font-style: italic;\\n}\\n.mat-cell:nth-child(1),\\n.mat-header-cell:nth-child(1){\\n  flex: 0 0 6%;\\n}\\n.mat-cell:nth-child(2),\\n.mat-header-cell:nth-child(2){\\n  flex: 0 0 15%;\\n}\\n.mat-cell:nth-child(3),\\n.mat-header-cell:nth-child(3){\\n  flex: 0 0 15%;\\n}\\n.mat-cell:nth-child(7),\\n.mat-header-cell:nth-child(7){\\n  flex: 0 0 7%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYztBQUNkO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtBQUN4QjtBQUVBLFlBQVk7QUFDWjtFQUNFLGNBQWM7QUFDaEI7QUFFQSxXQUFXO0FBQ1g7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZiw4QkFBOEI7RUFDOUIsb0NBQW9DO0FBQ3RDO0FBRUE7RUFDRSxlQUFlO0VBQ2YsWUFBWTtFQUNaLGVBQWU7QUFDakI7QUFFQSxjQUFjO0FBQ2Q7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLGFBQWE7RUFDYixlQUFlO0VBQ2Ysa0JBQWtCO0FBQ3BCO0FBRUE7O0VBRUUsWUFBWTtBQUNkO0FBRUE7O0VBRUUsYUFBYTtBQUNmO0FBRUE7O0VBRUUsYUFBYTtBQUNmO0FBRUE7O0VBRUUsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBTdHJ1Y3R1cmUgKi9cbi5jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4vKiBUb29sYmFyICovXG4uc3BhY2VyIHtcbiAgZmxleDogMSAxIGF1dG87XG59XG5cbi8qIEZpbHRlciAqL1xuLmZvcm0ge1xuICBtaW4taGVpZ2h0OiA1NnB4O1xuICBtYXgtaGVpZ2h0OiA1NnB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nOiA4cHggMjRweCAwO1xuICBmb250LXNpemU6IDIwcHg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xufVxuXG4ubWF0LWZvcm0tZmllbGQge1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZsZXgtZ3JvdzogMTtcbiAgbWFyZ2luLXRvcDogOHB4O1xufVxuXG4vKiBNYXQgdGFibGUgKi9cbi5uby1yZXN1bHRzIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHBhZGRpbmc6IDE0cHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4ubWF0LWNlbGw6bnRoLWNoaWxkKDEpLFxuLm1hdC1oZWFkZXItY2VsbDpudGgtY2hpbGQoMSl7XG4gIGZsZXg6IDAgMCA2JTtcbn1cblxuLm1hdC1jZWxsOm50aC1jaGlsZCgyKSxcbi5tYXQtaGVhZGVyLWNlbGw6bnRoLWNoaWxkKDIpe1xuICBmbGV4OiAwIDAgMTUlO1xufVxuXG4ubWF0LWNlbGw6bnRoLWNoaWxkKDMpLFxuLm1hdC1oZWFkZXItY2VsbDpudGgtY2hpbGQoMyl7XG4gIGZsZXg6IDAgMCAxNSU7XG59XG5cbi5tYXQtY2VsbDpudGgtY2hpbGQoNyksXG4ubWF0LWhlYWRlci1jZWxsOm50aC1jaGlsZCg3KXtcbiAgZmxleDogMCAwIDclO1xufVxuIl19 */\"","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {DataService} from './services/data.service';\nimport {HttpClient} from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport {Issue} from './models/issue';\nimport {DataSource} from '@angular/cdk/collections';\nimport {AddDialogComponent} from './dialogs/add/add.dialog.component';\nimport {EditDialogComponent} from './dialogs/edit/edit.dialog.component';\nimport {DeleteDialogComponent} from './dialogs/delete/delete.dialog.component';\nimport {BehaviorSubject, fromEvent, merge, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  displayedColumns = ['requestId', 'application', 'component', 'feature', 'on', 'actions'];\n  exampleDatabase: DataService | null;\n  dataSource: ExampleDataSource | null;\n  index: number;\n  id: number;\n  myDs: any;\n  searchData: {};\n  model: Issue;\n\n  constructor(public httpClient: HttpClient,\n              public dialog: MatDialog,\n              public dataService: DataService) {\n\n                this.model = new Issue();\n              }\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  @ViewChild('filter',  {static: true}) filter: ElementRef;\n\n  ngOnInit() {\n    // this.loadData();\n\n    this.dataService.getTest().subscribe(\n      data => {\n        const ds = data.content as string [];\n     this.myDs = data.content as string [];\t // FILL THE ARRAY WITH DATA.\n      console.log(ds);\n   },\n   (err: HttpErrorResponse) => {\n     console.log (err.message);\n   }\n );\n  }\n\n  onSubmit() {\n    this.dataService.doSearch(this.model)\n    .subscribe(\n      data => {\n        const ds = JSON.stringify(data[0]);\n     this.myDs = data;\n      console.log(ds);\n   },\n   (err: HttpErrorResponse) => {\n     console.log (err.message);\n   }\n );\n  }\n\n  // refresh() {\n  //   this.loadData();\n  // }\n\n  addNew(issue: Issue) {\n    const dialogRef = this.dialog.open(AddDialogComponent, {\n      data: {issue: issue }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataService\n        // this.exampleDatabase.dataChange.value.push(this.dataService.getDialogData());\n        // this.refreshTable();\n\n        this.dataService.getTest().subscribe(\n          data => {\n            const ds = data.content as string [];\n         this.myDs = data.content as string [];\t // FILL THE ARRAY WITH DATA.\n          console.log(ds);\n       },\n       (err: HttpErrorResponse) => {\n         console.log (err.message);\n       }\n     );\n      }\n    });\n  }\n\n  startEdit(i: number, id: number, application: string, component: string, feature: string, on: boolean) {\n    this.id = id;\n    // index row is used just for debugging proposes and can be removed\n    this.index = i;\n    console.log(this.index);\n    const dialogRef = this.dialog.open(EditDialogComponent, {\n      data: {id: id, application: application, component: component, feature: feature, on: on}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        // When using an edit things are little different, firstly we find record inside DataService by id\n        // const foundIndex = this.exampleDatabase.dataChange.value.findIndex(x => x.id === this.id);\n        // Then you update that record using data from dialogData (values you enetered)\n        // this.exampleDatabase.dataChange.value[foundIndex] = this.dataService.getDialogData();\n        // And lastly refresh table\n        // this.refreshTable();\n\n        this.dataService.getTest().subscribe(\n          data => {\n            const ds = data.content as string [];\n         this.myDs = data.content as string [];\t // FILL THE ARRAY WITH DATA.\n          console.log(ds);\n       },\n       (err: HttpErrorResponse) => {\n         console.log (err.message);\n       }\n     );\n\n      }\n    });\n  }\n\n  deleteItem(i: number, id: number, application: string, component: string, feature: string, on: boolean) {\n    this.index = i;\n    this.id = id;\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: {id: id, application: application, component: component, on: on}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(x => x.id === this.id);\n        // for delete we use splice in order to remove single object from DataService\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n        this.refreshTable();\n      }\n    });\n  }\n\n\n  private refreshTable() {\n    // Refreshing table using paginator\n    // Thanks yeager-j for tips\n    // https://github.com/marinantonio/angular-mat-table-crud/issues/12\n   // this.paginator._changePageSize(this.paginator.pageSize);\n  }\n\n\n  /*   // If you don't need a filter or a pagination this can be simplified, you just use code from else block\n    // OLD METHOD:\n    // if there's a paginator active we're using it for refresh\n    if (this.dataSource._paginator.hasNextPage()) {\n      this.dataSource._paginator.nextPage();\n      this.dataSource._paginator.previousPage();\n      // in case we're on last page this if will tick\n    } else if (this.dataSource._paginator.hasPreviousPage()) {\n      this.dataSource._paginator.previousPage();\n      this.dataSource._paginator.nextPage();\n      // in all other cases including active filter we do it like this\n    } else {\n      this.dataSource.filter = '';\n      this.dataSource.filter = this.filter.nativeElement.value;\n    }*/\n\n\n  public loadData() {\n    // this.exampleDatabase = new DataService(this.httpClient);\n    // this.dataSource = new ExampleDataSource(this.exampleDatabase, this.paginator, this.sort);\n    // fromEvent(this.filter.nativeElement, 'keyup')\n    //   // .debounceTime(150)\n    //   // .distinctUntilChanged()\n    //   .subscribe(() => {\n    //     if (!this.dataSource) {\n    //       return;\n    //     }\n    //     this.dataSource.filter = this.filter.nativeElement.value;\n    //   });\n  }\n}\n\nexport class ExampleDataSource extends DataSource<Issue> {\n  _filterChange = new BehaviorSubject('');\n\n  get filter(): string {\n    return this._filterChange.value;\n  }\n\n  set filter(filter: string) {\n    this._filterChange.next(filter);\n  }\n\n  filteredData: Issue[] = [];\n  renderedData: Issue[] = [];\n\n  constructor(public _exampleDatabase: DataService,\n              public _paginator: MatPaginator,\n              public _sort: MatSort) {\n    super();\n    // Reset to the first page when the user changes the filter.\n    this._filterChange.subscribe(() => this._paginator.pageIndex = 0);\n  }\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<Issue[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this._exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this._filterChange,\n      this._paginator.page\n    ];\n\n    this._exampleDatabase.getAllIssues();\n\n\n    return merge(...displayDataChanges).pipe(map( () => {\n        // Filter data\n        this.filteredData = this._exampleDatabase.data.slice().filter((issue: Issue) => {\n          const searchStr = (issue.id + issue.application.toLowerCase());\n          return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n        });\n\n        // Sort filtered data\n        const sortedData = this.sortData(this.filteredData.slice());\n\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this._paginator.pageIndex * this._paginator.pageSize;\n        this.renderedData = sortedData.splice(startIndex, this._paginator.pageSize);\n        return this.renderedData;\n      }\n    ));\n  }\n\n  disconnect() {}\n\n\n  /** Returns a sorted copy of the database data. */\n  sortData(data: Issue[]): Issue[] {\n    if (!this._sort.active || this._sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      let propertyA: number | string = '';\n      let propertyB: number | string = '';\n\n      switch (this._sort.active) {\n        case 'requestId': [propertyA, propertyB] = [a.id, b.id]; break;\n        case 'title': [propertyA, propertyB] = [a.application, b.application]; break;\n        case 'state': [propertyA, propertyB] = [a.component, b.component]; break;\n        case 'url': [propertyA, propertyB] = [a.feature, b.feature]; break;\n      }\n\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n\n      return (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1);\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport {DataService} from './services/data.service';\nimport {AddDialogComponent} from './dialogs/add/add.dialog.component';\nimport {EditDialogComponent} from './dialogs/edit/edit.dialog.component';\nimport {DeleteDialogComponent} from './dialogs/delete/delete.dialog.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddDialogComponent,\n    EditDialogComponent,\n    DeleteDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatDialogModule,\n    FormsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatIconModule,\n    MatSortModule,\n    MatTableModule,\n    MatToolbarModule,\n    MatPaginatorModule,\n    ReactiveFormsModule,\n    HttpModule,\n    MatCheckboxModule\n  ],\n  entryComponents: [\n    AddDialogComponent,\n    EditDialogComponent,\n    DeleteDialogComponent\n  ],\n  exports: [\n    MatCheckboxModule\n  ],\n  providers: [\n    DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {Component, Inject} from '@angular/core';\nimport {DataService} from '../../services/data.service';\nimport {FormControl, Validators} from '@angular/forms';\nimport {Issue} from '../../models/issue';\n\n@Component({\n  selector: 'app-add.dialog',\n  templateUrl: '../../dialogs/add/add.dialog.html',\n  styleUrls: ['../../dialogs/add/add.dialog.css']\n})\n\nexport class AddDialogComponent {\n  constructor(public dialogRef: MatDialogRef<AddDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: Issue,\n              public dataService: DataService) { }\n\n  formControl = new FormControl('', [\n    Validators.required\n    // Validators.email,\n  ]);\n\n  getErrorMessage() {\n    return this.formControl.hasError('required') ? 'Required field' :\n      this.formControl.hasError('email') ? 'Not a valid email' :\n        '';\n  }\n\n  submit() {\n  // emppty stuff\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  public confirmAdd(): void {\n    this.dataService.addIssue(this.data);\n  }\n}\n","module.exports = \".container {\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 450px;\\n}\\n\\n.container > * {\\n  width: 100%;\\n}\\n\\n.form {\\n  display: flex;\\n  padding-top: 6px;\\n}\\n\\n.mat-form-field {\\n  font-size: 16px;\\n  flex-grow: 1;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlhbG9ncy9hZGQvYWRkLmRpYWxvZy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGFBQWE7RUFDYixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvZGlhbG9ncy9hZGQvYWRkLmRpYWxvZy5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWluLXdpZHRoOiA0NTBweDtcbn1cblxuLmNvbnRhaW5lciA+ICoge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmZvcm0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBwYWRkaW5nLXRvcDogNnB4O1xufVxuXG4ubWF0LWZvcm0tZmllbGQge1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZsZXgtZ3JvdzogMTtcbn1cbiJdfQ== */\"","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {Component, Inject} from '@angular/core';\nimport {DataService} from '../../services/data.service';\n\n\n@Component({\n  selector: 'app-delete.dialog',\n  templateUrl: '../../dialogs/delete/delete.dialog.html',\n  styleUrls: ['../../dialogs/delete/delete.dialog.css']\n})\nexport class DeleteDialogComponent {\n\n  constructor(public dialogRef: MatDialogRef<DeleteDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any, public dataService: DataService) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  confirmDelete(): void {\n    this.dataService.deleteIssue(this.data.id);\n  }\n}\n","module.exports = \".container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.container > * {\\n  width: 100%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlhbG9ncy9kZWxldGUvZGVsZXRlLmRpYWxvZy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvZGlhbG9ncy9kZWxldGUvZGVsZXRlLmRpYWxvZy5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmNvbnRhaW5lciA+ICoge1xuICB3aWR0aDogMTAwJTtcbn1cbiJdfQ== */\"","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {Component, Inject} from '@angular/core';\nimport {DataService} from '../../services/data.service';\nimport {FormControl, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-baza.dialog',\n  templateUrl: '../../dialogs/edit/edit.dialog.html',\n  styleUrls: ['../../dialogs/edit/edit.dialog.css']\n})\nexport class EditDialogComponent {\n\n  constructor(public dialogRef: MatDialogRef<EditDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any, public dataService: DataService) {\n\n                const myData = data;\n               }\n\n  formControl = new FormControl('', [\n    Validators.required\n    // Validators.email,\n  ]);\n\n  getErrorMessage() {\n    return this.formControl.hasError('required') ? 'Required field' :\n      this.formControl.hasError('email') ? 'Not a valid email' :\n        '';\n  }\n\n  submit() {\n    // emppty stuff\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  stopEdit(): void {\n    this.dataService.updateIssue(this.data);\n  }\n}\n","module.exports = \".container {\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 450px;\\n}\\n\\n.container > * {\\n  width: 100%;\\n}\\n\\n.form {\\n  display: flex;\\n  padding-top: 6px;\\n}\\n\\n.mat-form-field {\\n  font-size: 16px;\\n  flex-grow: 1;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlhbG9ncy9lZGl0L2VkaXQuZGlhbG9nLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixZQUFZO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9kaWFsb2dzL2VkaXQvZWRpdC5kaWFsb2cuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG1pbi13aWR0aDogNDUwcHg7XG59XG5cbi5jb250YWluZXIgPiAqIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5mb3JtIHtcbiAgZGlzcGxheTogZmxleDtcbiAgcGFkZGluZy10b3A6IDZweDtcbn1cblxuLm1hdC1mb3JtLWZpZWxkIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmbGV4LWdyb3c6IDE7XG59XG4iXX0= */\"","export class Issue {\n  id: number;\n  application: string;\n  component: string;\n  feature: string;\n  on: boolean;\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {Issue} from '../models/issue';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport { Http, Response } from '@angular/http';\nimport { environment } from '../../environments/environment'\nimport 'rxjs/add/operator/map';\n// tslint:disable-next-line:import-blacklist\nimport 'rxjs/Rx';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class DataService {\n  // This will point to a stand-alone Spring Boot REST endpoint\n // private readonly API_URL = ;\n\n  dataChange: BehaviorSubject<Issue[]> = new BehaviorSubject<Issue[]>([]);\n  // Almaceno temporalmente los datos del dialogo\n  dialogData: any;\n  searchResponceData: any;\n\n  // constructor (private httpClient: HttpClient, private _http: Http) {}\n\n  constructor (private _http: Http) {}\n\n  get data(): Issue[] {\n    return this.dataChange.value;\n  }\n\n  getDialogData() {\n    return this.dialogData;\n  }\n\n  /** CRUD METHODS */\n  getAllIssues(): any {\n    // this.httpClient.get<Issue[]>(this.API_URL).subscribe(data => {\n    //     this.dataChange.next(data);\n    //   },\n    //   (error: HttpErrorResponse) => {\n    //   console.log (error.name + ' ' + error.message);\n    //   });\n  }\n\n  getTest() {\n    // console.log('API_URL' + environment.ApiUrl);\n    return this._http.get('/api/getall')\n       .map((res: Response) => res.json());\n}\n\ndoSearch (issue: Issue): any {\n  this.dialogData = issue;\n  const requestId = this.dialogData['requestId'];\n  const application = this.dialogData['application'];\n  const component = this.dialogData['component'];\n  const feature = this.dialogData['feature'];\n  const on = this.dialogData['on'];\n\n  const dataObject = {requestId: requestId, application: application, component: component,\n    feature: feature,  on: on};\n  return this._http.post('/api/search', dataObject)\n  .pipe(map((res: Response) => res.json()))\n//   .subscribe({\n//   // next: data => this.searchResponceData = data.json,\n//     error: error => console.error('There was an error!', error),\n// })\n;\n}\n\n  // solo para demo, el API usado no admite modificaciones salvo que seamos desarrolldores de angular,\n  // por lo que los metodos no hacen nada\n  addIssue (issue: Issue): void {\n    this.dialogData = issue;\n    const requestId = this.dialogData['requestId'];\n    const application = this.dialogData['application'];\n    const component = this.dialogData['component'];\n    const feature = this.dialogData['feature'];\n    const on = this.dialogData['on'];\n    const dataObject = {requestIond: requestId, application: application, component: component,\n      feature: feature,  on: on};\n    console.log('Issue content:  ' + this.dialogData);\n    // console.log(environment.ApiUrl);\n    this._http.post('/api/addnew', dataObject).subscribe({\n      // next: data => this.postId = data.id,\n      error: error => console.error('There was an error!', error)\n  });\n\n  }\n\n  updateIssue (issue: Issue): void {\n    this.dialogData = issue;\n    const id = this.dialogData['id'];\n    const application = this.dialogData['application'];\n    const component = this.dialogData['component'];\n    const feature = this.dialogData['feature'];\n    const on = this.dialogData['on'];\n    const dataObject = {id: id, application: application, component: component, feature: feature, on: on};\n    // console.log('POST API_URL:   ' + environment.ApiUrl);\n    // console.log('Issue content:  ' + this.dialogData);\n    this._http.post('/api/addnew', dataObject).subscribe({\n      error: error => console.error('There was an error!', error)\n  });\n  }\n\n  deleteIssue (id: number): void {\n    console.log(id);\n  }\n}\n\n\n\n/* EJEMPLOS de metodos CRUD reales, atencion, los tipos no corresponden con los utilizados más arriba:\n\n    // Create de [C]rud: ADD, POST METHOD\n    addItem(kanbanItem: KanbanItem): void {\n    this.httpClient.post(this.API_URL, kanbanItem).subscribe(data => {\n      this.dialogData = kanbanItem;\n      this.toasterService.showToaster('Añadido con éxito', 3000);\n      },\n      (err: HttpErrorResponse) => {\n      this.toasterService.showToaster('Ha ocurrido un error. Los detalles: ' + err.name + ' ' + err.message, 8000);\n    });\n   }\n\n    // Update de cr[U]d UPDATE, PUT METHOD\n    updateItem(kanbanItem: KanbanItem): void {\n      this.httpClient.put(this.API_URL + kanbanItem.id, kanbanItem).subscribe(data => {\n        this.dialogData = kanbanItem;\n        this.toasterService.showToaster('Modificado con éxito', 3000);\n      },\n      (err: HttpErrorResponse) => {\n        this.toasterService.showToaster('Ha ocurrido un error. Los detalles: ' + err.name + ' ' + err.message, 8000);\n      }\n    );\n  }\n\n  // Delete de cru[D] DELETE METHOD\n  deleteItem(id: number): void {\n    this.httpClient.delete(this.API_URL + id).subscribe(data => {\n      console.log(data['']);\n        this.toasterService.showToaster('Eliminado con éxito', 3000);\n      },\n      (err: HttpErrorResponse) => {\n        this.toasterService.showToaster('Ha ocurrido un error. Los detalles: ' + err.name + ' ' + err.message, 8000);\n      }\n    );\n  }\n*/\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  ApiUrl: $ENV.API_URL\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}